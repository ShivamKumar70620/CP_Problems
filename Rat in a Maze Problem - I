class Solution{
    public:
    void solve(int i,int j,vector<vector<int>> &m,int n,vector<string> &ans,vector<vector<int>> &vis,string str){
        if(i==n-1 && j==n-1){
            ans.push_back(str);
            return ;
        }
        //Down
        if(i+1<=n-1 && !vis[i+1][j] && m[i+1][j]==1){
            vis[i][j] = 1;
            solve(i+1,j,m,n,ans,vis,str+'D');
            vis[i][j] = 0;
        }
        //left
        if(j-1>=0 && !vis[i][j-1] && m[i][j-1]==1){
            vis[i][j] = 1;
            solve(i,j-1,m,n,ans,vis,str+'L');
            vis[i][j] = 0;
        }
        //right
        if(j+1<=n-1 && !vis[i][j+1] && m[i][j+1]==1){
            vis[i][j] = 1;
            solve(i,j+1,m,n,ans,vis,str+'R');
            vis[i][j] = 0;
        }
        
        //UP
        if(i-1>=0 && !vis[i-1][j] && m[i-1][j]==1){
            vis[i][j] = 1;
            solve(i-1,j,m,n,ans,vis,str+'U');
            vis[i][j] = 0;
        }
        
    }
    vector<string> findPath(vector<vector<int>> &m, int n) {
        vector<string> ans;
        vector<vector<int>> vis(n,vector<int>(n,0));
        if(m[0][0]==1) solve(0,0,m,n,ans,vis,"");
        return ans;
        
    }
};


T.C. = 4^(n*n)
S.C. = n*n
https://practice.geeksforgeeks.org/problems/rat-in-a-maze-problem/1
