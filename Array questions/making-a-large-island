https://leetcode.com/problems/making-a-large-island/submissions/

code:-


class Solution {
public:
    
    int solve(int i,int j,int n,int m,vector<vector<int>> &grid,int id){
        if(i<0 || i>=n || j<0 || j>=m || grid[i][j]!=1)
            return 0;
        grid[i][j] = id;
        return 1+solve(i-1,j,n,m,grid,id)+solve(i,j-1,n,m,grid,id)+solve(i+1,j,n,m,grid,id)+solve(i,j+1,n,m,grid,id);
    }
    
    
    
    int largestIsland(vector<vector<int>>& grid) {
        int mx = 0,n = grid.size(),m=grid[0].size();
        int id = 2;
        map<int,int> mp;
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(grid[i][j] == 1)
                {
                    int size = solve(i,j,n,m,grid,id);
                    mx = max(mx,size);
                    mp[id++] = size;
                }
                
            }
        }
        int dir[][4] = {{0,-1},{-1,0},{1,0},{0,1}};
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(grid[i][j]==0){
                    set<int> st;
                    for(int k=0;k<4;k++){
                        int x = dir[k][0]+i,y = dir[k][1]+j;
                        if(x>=0 && x<n && y>=0 && y<m && grid[x][y] != 0)
                            st.insert(grid[x][y]);
                    }
                    int sum = 1;
                    for(auto num:st){
                        sum+=mp[num];
                    }
                    mx = max(mx,sum);
                }
                
            }
        }
        return mx;
    }
};
