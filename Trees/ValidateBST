https://leetcode.com/problems/validate-binary-search-tree/

code:-

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool check(TreeNode* root,int value,bool flag){
        if(root==NULL)
            return 1;
        if(flag){
            if(root->val>=value)
                return false;
            return check(root->left,value,flag) && check(root->right,value,flag);
        }
        else{
            if(root->val<=value)
                return false;
            return check(root->left,value,flag) && check(root->right,value,flag);
        }
    }
    bool isValidBST(TreeNode* root) {
        if(root!=NULL){
            if(check(root->left,root->val,true) && check(root->right,root->val,false))
                return isValidBST(root->left) && isValidBST(root->right);
            else
                return false;
        }
        return true;
        
    }
};
