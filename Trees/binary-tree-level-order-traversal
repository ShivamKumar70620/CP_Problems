https://leetcode.com/problems/binary-tree-level-order-traversal/

code:-

class Solution {
public:
    int height(TreeNode* root){
        if(root==NULL)
            return 0;
        return 1+max(height(root->left),height(root->right));
    }
    vector<vector<int>> levelOrder(TreeNode* root) {
        vector<vector<int>> ans;
        if(!root)
            return ans;
        int n = height(root);
        vector<int> adj[n];
        int h = 0;
        stack<pair<TreeNode*,int>> st;
        while(1){
            if(root==NULL && st.empty())
                break;
            if(root==NULL)
            {
                root = st.top().first;
                h = st.top().second+1;
                st.pop();
                root = root->right;
            }
            else{
                st.push({root,h});
                // cout<<h<<" "<<root->val<<endl;
                adj[h].push_back(root->val);
                h+=1;
                root = root->left;
            }
        }
        
        for(int i=0;i<n;i++)
        {
            ans.push_back(adj[i]);
        }
        return ans;
    }
};
