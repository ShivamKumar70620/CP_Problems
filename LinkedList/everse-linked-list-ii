https://leetcode.com/problems/reverse-linked-list-ii/

code:-


class Solution {
public:
    ListNode* solve(ListNode* head,int left,int right){
        ListNode* prev = NULL,*curr=head,*next = NULL,*last=curr;
        // int i=1;
        while(left<=right){
            next = curr->next;
            curr->next = prev;
            prev = curr;
            curr = next;
            left+=1;
            
        }
        last->next = next;
        return prev;
        
        
    }
    ListNode* reverseBetween(ListNode* head, int left, int right) {
        if(left>=right)
            return head;
        ListNode* curr = head,*temp = head;
        int i = 1;
        while(i<left)
        {
            curr = curr->next;
            i+=1;
        }
        ListNode* ans = solve(curr,left,right);
        if(left==1)
            return ans;
        i = 1;
        while(i<left-1){
            temp = temp->next;
            i+=1;
        }
        temp->next = ans;
        return head;
        // return head;
    }
        
};
