https://leetcode.com/problems/partition-list/submissions/

code:-

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* partition(ListNode* head, int x) {
        ListNode* left = head,*lastbig = NULL,*lastsmall = NULL;
        vector<ListNode*> st;
        while(1){
            if(left==NULL)
                break;
            if(left->val>=x){
                lastbig = left;
                left = left->next;
            }
            else{
                ListNode* nxt = left->next;
                if(lastbig!=NULL)
                {
                    if(lastsmall==NULL){
                        left->next = head;
                        lastbig->next = nxt;
                        head = left;
                    }
                    else{
                        ListNode* temp = lastsmall->next;
                        lastsmall->next = left;
                        left->next = temp;
                        lastbig->next = nxt;
                    }
                        
                }
                lastsmall = left;
                left = nxt;
            }
            
        }
        return head;
    }
};
