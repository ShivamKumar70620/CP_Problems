https://leetcode.com/problems/partition-array-for-maximum-sum/submissions/


code:-
class Solution {
public:
    int solve(int ind,vector<int>& arr, int k,int n,vector<int> &dp){
        if(ind>=n)
            return 0; 
        if(dp[ind]!=-1)
            return dp[ind];
        int l = 0,sum = INT_MIN,mx = 0,mxans = INT_MIN;
        for(int j=ind;j<min(ind+k,n);j++){
            l++;
            mx = max(mx,arr[j]);
            sum = l*mx + solve(j+1,arr,k,n,dp);
            mxans = max(mxans,sum)  ;
        }
        return dp[ind]=mxans;
    }
    int maxSumAfterPartitioning(vector<int>& arr, int k) {
        vector<int> dp(arr.size(),-1);
        return solve(0,arr,k,arr.size(),dp);
        
            
    }
};


tc = O(n*k)
