https://leetcode.com/problems/palindrome-partitioning/

code:-

class Solution {
public:
    void solve(int start,int end,vector<string> temp,vector<vector<string>> &res,string s){
        if(start>end){
            res.push_back(temp);
            return ;
        }
        string str;
        for(int i=start;i<=end;i++){
            str = s.substr(start,i-start+1);
            cout<<str<<endl;
            string t = str;;
            reverse(t.begin(),t.end());
            if(str==t){
                temp.push_back(t);
                solve(i+1,end,temp,res,s);
                temp.pop_back();
            }
            // str.pop_back();
        }
        
    }
    vector<vector<string>> partition(string s) {
        vector<vector<string>> ans;
        vector<string> temp;
        solve(0,s.size()-1,temp,ans,s);
        return ans;
        
    }
};
