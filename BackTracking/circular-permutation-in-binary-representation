https://leetcode.com/problems/circular-permutation-in-binary-representation/submissions/

code:-

class Solution {
public:
    
    
    // set<int> st;
    void solve(int n,int start,map<int,int> &mp,vector<int> &ans){
        for(int i=0;i<n;i++){
            int next = start^(1<<i);// to find the next element which has the difference of one bit only
            if(mp.find(next)==mp.end()){
                ans.push_back(next);
                mp[next] = 1;
                solve(n,next,mp,ans);
            }
        }
    }
    vector<int> circularPermutation(int n, int start) {
        vector<int> ans;
        map<int,int> mp;
        ans.push_back(start);
        mp[start] = 1;
        solve(n,start,mp,ans);
        return ans;
    }
};
