https://leetcode.com/problems/binary-tree-paths/

code:-

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<string> ans;
    void backtrack(TreeNode* root,string temp){
        if(root==NULL)
            return;
        if(root->left==NULL && root->right==NULL){
            ans.push_back(temp+to_string(root->val));
            return ;
        }
        backtrack(root->left,temp+to_string(root->val)+"->");
        backtrack(root->right,temp+to_string(root->val)+"->");
        
        
    }
    vector<string> binaryTreePaths(TreeNode* root) {
        backtrack(root,"");
        return ans;
    }
};
